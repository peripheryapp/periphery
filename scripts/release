#!/bin/bash

set -e

GREEN='\033[1;32m'
NC='\033[0m' # No Color

confirm () {
  green "$1 (y/n): "
  read answer

  if [ $answer != "y" ]
  then
    exit 0
  fi
}

green () {
  printf "${GREEN}${1}${NC}"
}

codesign () {
  /usr/bin/codesign --force --options=runtime --sign "Developer ID Application: Ian Leitch (8L8F8HSTR4)" "$1"
}

notarize () {
  xcrun notarytool submit --keychain-profile "PeripheryNotarize" --wait "$1"
}

xcodebuild -version

printf "\nVersion: "
read version
printf "Got it: $version\n"

confirm "\nContinue?"

rm -rf .release
mkdir .release

cat scripts/Version.swift.template | sed s/__VERSION__/${version}/ > Sources/Frontend/Version.swift
cat scripts/Periphery.podspec.template | sed s/__VERSION__/${version}/ > Periphery.podspec
cat scripts/artifactbundle_info.json.template | sed s/__VERSION__/${version}/ > .release/info.json

echo -e "\nUpdate CHANGELOG.md"
confirm "Continue?"

bin_path=$(make show_bin_path)
rm -rf "$bin_path"
make build_release
cp "$bin_path" .release/
cp LICENSE.md .release/
cp scripts/release_notes.md.template .release/release_notes.md

# Codesign
cd .release
codesign periphery

# Archive
zip_filename="periphery-${version}.zip"
zip "${zip_filename}" periphery LICENSE.md
codesign "${zip_filename}"

echo -e "\n${zip_filename} checksum:"
sha256=$( shasum -a 256 ${zip_filename} | awk '{print $1}' )
echo ${sha256}

zip_artifactbundle="periphery-${version}.artifactbundle.zip"
zip "${zip_artifactbundle}" periphery LICENSE.md info.json
codesign "${zip_artifactbundle}"

echo -e "\n${zip_artifactbundle} checksum:"
artifactbundle_sha256=$( shasum -a 256 ${zip_artifactbundle} | awk '{print $1}' )
echo ${artifactbundle_sha256}

# Notarize
notarize "${zip_filename}"
notarize "${zip_artifactbundle}"

echo -e "\nVerify changes"
confirm "Continue?"

# GitHub
git commit -a -m "Release ${version}"
git tag -a ${version} -m "Periphery ${version}"
git push origin master
git push origin ${version}

code --wait release_notes.md
echo -e "$(cat release_notes.md)" > release_notes.md
echo
echo "Release Notes:"
cat release_notes.md
echo

confirm "Continue?"

cd ..
gh release create -F .release/release_notes.md "${version}" ".release/${zip_filename}" ".release/${zip_artifactbundle}"

# HomeBrew
cd ../homebrew-periphery
cat periphery.rb.template | sed s/__VERSION__/${version}/ | sed s/__SHA256__/${sha256}/ > Casks/periphery.rb
git add Casks/periphery.rb
git commit -m "${version}"
git push origin master
cd ../periphery

# CocoaPods
bundle install --quiet
bundle exec pod trunk push --skip-tests --skip-import-validation --allow-warnings Periphery.podspec
