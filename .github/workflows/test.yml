name: Test
on:
  push:
    branches:
      - master
  pull_request: {}
jobs:
  macOS:
    strategy:
      fail-fast: false
      matrix:
        xcode: [12.4, 12.3, 12.2, 12.1]
    runs-on: macOS-latest
    name: macOS
    steps:
    - uses: actions/checkout@master
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app; swift -version
    - name: Get Swift Version
      id: get-swift-version
      run: |
          echo "::set-output name=version::$(swift -version | head -n 1 | sed s/,// )"
      shell: bash
    - name: Cache resolved dependencies
      id: cache-resolved-dependencies
      uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-${{ hashFiles('**/Package.*') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-
    - name: Resolve dependencies
      if: steps.cache-resolved-dependencies.outputs.cache-hit != 'true'
      run: swift package resolve
    - name: Build
      run: swift build --build-tests
    - name: Test
      run: swift test
    - name: Scan
      run: ./.build/debug/periphery scan --quiet --skip-build --strict
  linux:
    strategy:
      fail-fast: false
      matrix:
        swift: ["nightly-5.5", "5.4", "5.3"]
        include:
          - swift: nightly-5.5
            container: "swiftlang/swift:nightly-5.5-focal"
            cache-version: 2
          - swift: 5.4
            container: "swift:5.4"
            cache-version: 1
          - swift: 5.3
            container: "swift:5.3"
            cache-version: 1
    runs-on: ubuntu-20.04
    container: ${{ matrix.container }}
    name: Linux
    steps:
    - name: Get Swift Version
      id: get-swift-version
      run: |
        echo "::set-output name=version::$(swift -version | head -n 1 | sed s/,// )"
      shell: bash
    - uses: actions/checkout@master
    - name: Cache resolved dependencies
      id: cache-resolved-dependencies
      uses: actions/cache@v2
      with:
        path: .build
        key: ${{ matrix.cache-version }}-${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-${{ hashFiles('**/Package.*') }}
        restore-keys: |
          ${{ matrix.cache-version }}-${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-
    - name: Resolve dependencies
      if: steps.cache-resolved-dependencies.outputs.cache-hit != 'true'
      run: swift package resolve
    - name: Build
      run: swift build --build-tests --enable-test-discovery
    - name: Test
      run: swift test --enable-test-discovery
    - name: Scan
      run: ./.build/debug/periphery scan --quiet --skip-build